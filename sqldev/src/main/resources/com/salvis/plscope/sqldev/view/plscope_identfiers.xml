<?xml version="1.0" encoding="UTF-8"?>
<displays>
	<!-- based on https://github.com/PhilippSalvisberg/plscope-utils/blob/master/database/utils/view/plscope_identifiers.sql -->
	<!-- used sys.all_ instead of dba_ -->
	<!-- Use case sensitive result columns including spaces -->

	<display type="editor" style="null" enable="true" connType="Oracle"
		objectType="FUNCTION,MATERIALIZED VIEW,PACKAGE,PACKAGE BODY,PROCEDURE,SYNONYM,TABLE,TRIGGER,TYPE,TYPE BODY,VIEW">
		<name><![CDATA[PL/Scope Declarations]]></name>
		<description><![CDATA[]]>
		</description>
		<tooltip><![CDATA[]]>
		</tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<queries>

			<query minversion="12.2">
				<sql><![CDATA[
WITH
   base_ids AS (
      SELECT owner,
             name,
             signature,
             type,
             object_name,
             object_type,
             usage,
             usage_id,
             line,
             col,
             usage_context_id,
             origin_con_id
        FROM sys.all_identifiers
      UNION ALL
      SELECT owner,
             ':' || NVL(sql_id, type) AS name,  -- intermediate statement marker colon
             signature,
             type,
             object_name,
             object_type,
             'EXECUTE' AS usage, -- new, artificial usage
             usage_id,
             line,
             col,
             usage_context_id,
             origin_con_id
       FROM sys.all_statements
   ),
   ids AS (
      SELECT owner,
             name,
             signature,
             type,
             object_name,
             object_type,
             usage,
             usage_id,
             line,
             col,
             coalesce(
                least(
                   usage_context_id,
                   max(usage_id) over (
                      PARTITION BY owner, object_name, object_type
                      ORDER BY usage_id
                      ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING
                   )
                ),
                0
             ) AS usage_context_id, -- fix broken hierarchies
             origin_con_id
        FROM base_ids
       WHERE owner       = :OBJECT_OWNER
         AND object_type IN (:OBJECT_TYPE, :OBJECT_TYPE || ' BODY')  
         AND object_name = :OBJECT_NAME
   ),
   tree AS (
       SELECT ids.owner,
              ids.object_type,
              ids.object_name,
              ids.line,
              ids.col,
              ids.name,
              sys_connect_by_path(ids.name, '/') AS name_path,
              level as path_len,
              ids.type,
              ids.usage,
              ids.signature,
              ids.usage_id,
              ids.usage_context_id,
              ids.origin_con_id
         FROM ids
        START WITH ids.usage_context_id = 0
      CONNECT BY  PRIOR ids.usage_id    = ids.usage_context_id
              AND PRIOR ids.owner       = ids.owner
              AND PRIOR ids.object_type = ids.object_type
              AND PRIOR ids.object_name = ids.object_name
   )
 SELECT lpad(' ', 3 * (tree.path_len - 1)) || tree.usage AS "Usage",
        tree.type AS "Type",
        CASE
           WHEN tree.object_type IN ('FUNCTION', 'PACKAGE', 'PACKAGE BODY', 'PROCEDURE', 'TRIGGER', 'TYPE', 'TYPE BODY') THEN
              'SQLDEV:LINK:' || tree.owner || ':' || tree.object_type || ':' || tree.object_name || ':' ||
                 to_char(tree.line,'FM0000009') || ':' || 
                 to_char(tree.col,'FM0000009') || ':' || 
                 replace(tree.name, ':', NULL) || -- remove intermediate statement marker
                 ':oracle.dbtools.raptor.controls.grid.DefaultDrillLink'
           ELSE
              replace(tree.name, ':', NULL) -- remove intermediate statement marker
        END AS "Name",
        CASE 
           WHEN tree.object_type IN ('PACKAGE BODY', 'PROCEDURE', 'FUNCTION', 'TYPE BODY')
              AND tree.usage = 'DECLARATION'
              AND tree.type NOT IN ('LABEL')
           THEN
              CASE
                 WHEN 
                    count(
                       CASE 
                          WHEN tree.usage NOT IN ('DECLARATION', 'ASSIGNMENT') 
                             OR (tree.type IN ('FORMAL OUT', 'FORMAL IN OUT')
                                 AND tree.usage = 'ASSIGNMENT')
                          THEN 
                             1 
                       END
                    ) OVER (
                       PARTITION BY tree.owner, tree.object_name, tree.object_type, tree.signature
                    ) = 0
                 THEN
                    'NO'
                 ELSE
                    'YES'
              END
        END AS "Used?",
        tree.line AS "Line",
        tree.col AS "Col",
        (
           SELECT regexp_replace(src.text, chr(10)||'+$', null) -- remove trailing new line character
             FROM sys.all_source src
            WHERE src.owner = tree.owner
              AND src.type = tree.object_type
              AND src.name = tree.object_name
              AND src.line = tree.line
        ) AS "Text"
   FROM tree
  ORDER BY length(tree.object_type), tree.path_len, tree.line, tree.col 
				]]></sql>
			</query>
			<query minversion="11.1">
				<sql><![CDATA[
WITH
   ids AS (
      SELECT owner,
             name,
             signature,
             type,
             object_name,
             object_type,
             usage,
             usage_id,
             line,
             col,
             coalesce(
                least(
                   usage_context_id,
                   max(usage_id) over (
                      PARTITION BY owner, object_name, object_type
                      ORDER BY usage_id
                      ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING
                   )
                ),
                0
             ) AS usage_context_id, -- fix broken hierarchies
             origin_con_id
        FROM sys.all_identifiers
       WHERE owner       = :OBJECT_OWNER
         AND object_type IN (:OBJECT_TYPE, :OBJECT_TYPE || ' BODY')  
         AND object_name = :OBJECT_NAME
   ),
   tree AS (
       SELECT ids.owner,
              ids.object_type,
              ids.object_name,
              ids.line,
              ids.col,
              ids.name,
              sys_connect_by_path(ids.name, '/') AS name_path,
              level as path_len,
              ids.type,
              ids.usage,
              ids.signature,
              ids.usage_id,
              ids.usage_context_id,
              ids.origin_con_id
         FROM ids
        START WITH ids.usage_context_id = 0
      CONNECT BY  PRIOR ids.usage_id    = ids.usage_context_id
              AND PRIOR ids.owner       = ids.owner
              AND PRIOR ids.object_type = ids.object_type
              AND PRIOR ids.object_name = ids.object_name
   )
 SELECT lpad(' ', 3 * (tree.path_len - 1)) || tree.usage AS "Usage",
        tree.type AS "Type",
        CASE
           WHEN tree.object_type IN ('FUNCTION', 'PACKAGE', 'PACKAGE BODY', 'PROCEDURE', 'TRIGGER', 'TYPE', 'TYPE BODY') THEN
              'SQLDEV:LINK:' || tree.owner || ':' || tree.object_type || ':' || tree.object_name || ':' ||
                 to_char(tree.line,'FM0000009') || ':' || 
                 to_char(tree.col,'FM0000009') || ':' || 
                 replace(tree.name, ':', NULL) || -- remove intermediate statement marker
                 ':oracle.dbtools.raptor.controls.grid.DefaultDrillLink'
           ELSE
              replace(tree.name, ':', NULL) -- remove intermediate statement marker
        END AS "Name",
        CASE 
           WHEN tree.object_type IN ('PACKAGE BODY', 'PROCEDURE', 'FUNCTION', 'TYPE BODY')
              AND tree.usage = 'DECLARATION'
              AND tree.type NOT IN ('LABEL')
           THEN
              CASE
                 WHEN 
                    count(
                       CASE 
                          WHEN tree.usage NOT IN ('DECLARATION', 'ASSIGNMENT') 
                             OR (tree.type IN ('FORMAL OUT', 'FORMAL IN OUT')
                                 AND tree.usage = 'ASSIGNMENT')
                          THEN 
                             1 
                       END
                    ) OVER (
                       PARTITION BY tree.owner, tree.object_name, tree.object_type, tree.signature
                    ) = 0
                 THEN
                    'NO'
                 ELSE
                    'YES'
              END
        END AS "Used?",
        tree.line AS "Line",
        tree.col AS "Col",
        (
           SELECT regexp_replace(src.text, chr(10)||'+$', null) -- remove trailing new line character
             FROM sys.all_source src
            WHERE src.owner = tree.owner
              AND src.type = tree.object_type
              AND src.name = tree.object_name
              AND src.line = tree.line
        ) AS "Text"
   FROM tree
  ORDER BY length(tree.object_type), tree.path_len, tree.line, tree.col 
				]]></sql>
			</query>
		</queries>
	</display>

	<display type="editor" style="null" enable="true" connType="Oracle"
		objectType="FUNCTION,MATERIALIZED VIEW,PACKAGE,PACKAGE BODY,PROCEDURE,SYNONYM,TABLE,TRIGGER,TYPE,TYPE BODY,VIEW">
		<name><![CDATA[PL/Scope References]]></name>
		<description><![CDATA[]]>
		</description>
		<tooltip><![CDATA[]]>
		</tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<queries>

			<query minversion="11.1">
				<sql><![CDATA[
 SELECT ids.owner AS "Owner",
        ids.object_type AS "Object type",
        ids.object_name AS "Object name",
        ids.usage AS "Usage",
        ids.type AS "Type",
        CASE
           WHEN ids.object_type IN ('FUNCTION', 'PACKAGE', 'PACKAGE BODY', 'PROCEDURE', 'TRIGGER', 'TYPE', 'TYPE BODY') THEN
              'SQLDEV:LINK:' || ids.owner || ':' || ids.object_type || ':' || ids.object_name || ':' ||
                 to_char(ids.line,'FM0000009') || ':' || to_char(ids.col,'FM0000009') || ':' || ids.name ||
                 ':oracle.dbtools.raptor.controls.grid.DefaultDrillLink'
           ELSE
              ids.name
        END AS "Name",
        ids.line AS "Line",
        ids.col aS "Col",
        (
           SELECT regexp_replace(src.text, chr(10)||'+$', null) -- remove trailing new line character
             FROM sys.all_source src
            WHERE src.owner = ids.owner
              AND src.type = ids.object_type
              AND src.name = ids.object_name
              AND src.line = ids.line
        ) AS "Text"
   FROM sys.all_identifiers ids
   JOIN sys.all_identifiers refs
     ON refs.signature = ids.signature
        AND refs.usage = 'DECLARATION'
  WHERE refs.owner       = :OBJECT_OWNER
    AND refs.object_type = :OBJECT_TYPE 
    AND refs.object_name = :OBJECT_NAME
    AND NOT (
               ids.owner       = :OBJECT_OWNER
           AND ids.object_type IN (:OBJECT_TYPE, :OBJECT_TYPE || ' BODY')  
           AND ids.object_name = :OBJECT_NAME
        )
    
  ORDER BY ids.owner, ids.object_type, ids.object_name, ids.line, ids.col
				]]></sql>
			</query>

		</queries>
	</display>

</displays>
